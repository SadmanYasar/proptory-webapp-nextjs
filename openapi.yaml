openapi: 3.1.0
info:
  title: Proptory API
  version: 0.1.0
  description: Proptory API created with ZenStack
  summary: Created with ZenStack
tags:
  - name: account
    description: Account operations
  - name: session
    description: Session operations
  - name: user
    description: User operations
  - name: verificationToken
    description: VerificationToken operations
  - name: listing
    description: Listing operations
components:
  schemas:
    Role:
      type: string
      enum:
        - USER
        - ADMIN
        - AGENT
    AccountScalarFieldEnum:
      type: string
      enum:
        - id
        - userId
        - type
        - provider
        - providerAccountId
        - refresh_token
        - access_token
        - expires_at
        - token_type
        - scope
        - id_token
        - session_state
    SessionScalarFieldEnum:
      type: string
      enum:
        - id
        - sessionToken
        - userId
        - expires
    UserScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - email
        - emailVerified
        - image
        - role
    VerificationTokenScalarFieldEnum:
      type: string
      enum:
        - identifier
        - token
        - expires
    ListingScalarFieldEnum:
      type: string
      enum:
        - id
        - title
        - description
        - price
        - bathrooms
        - bedrooms
        - userId
        - matterPortId
        - state
        - city
        - createdAt
        - updatedAt
    SortOrder:
      type: string
      enum:
        - asc
        - desc
    QueryMode:
      type: string
      enum:
        - default
        - insensitive
    NullsOrder:
      type: string
      enum:
        - first
        - last
    Account:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
        user:
          $ref: "#/components/schemas/User"
      required:
        - id
        - userId
        - type
        - provider
        - providerAccountId
        - user
    Session:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        userId:
          type: string
        expires:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/User"
      required:
        - id
        - sessionToken
        - userId
        - expires
        - user
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        role:
          $ref: "#/components/schemas/Role"
        accounts:
          type: array
          items:
            $ref: "#/components/schemas/Account"
        sessions:
          type: array
          items:
            $ref: "#/components/schemas/Session"
        listings:
          type: array
          items:
            $ref: "#/components/schemas/Listing"
      required:
        - id
        - role
    VerificationToken:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - identifier
        - token
        - expires
    Listing:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: number
        bathrooms:
          type: integer
        bedrooms:
          type: integer
        user:
          $ref: "#/components/schemas/User"
        userId:
          type: string
        matterPortId:
          type: string
        state:
          type: string
        city:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - title
        - description
        - price
        - bathrooms
        - bedrooms
        - user
        - userId
        - matterPortId
        - state
        - city
        - createdAt
        - updatedAt
    AccountWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AccountWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        providerAccountId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        access_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        token_type:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        scope:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        id_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        session_state:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    AccountOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        userId:
          $ref: "#/components/schemas/SortOrder"
        type:
          $ref: "#/components/schemas/SortOrder"
        provider:
          $ref: "#/components/schemas/SortOrder"
        providerAccountId:
          $ref: "#/components/schemas/SortOrder"
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        access_token:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        token_type:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        scope:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        id_token:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        session_state:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    AccountWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        provider_providerAccountId:
          $ref: "#/components/schemas/AccountProviderProviderAccountIdCompoundUniqueInput"
        AND:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AccountWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereInput"
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        providerAccountId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        access_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        token_type:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        scope:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        id_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        session_state:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    AccountScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        providerAccountId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        access_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/IntNullableWithAggregatesFilter"
            - type: integer
        token_type:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        scope:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        id_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        session_state:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
    SessionWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SessionWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        sessionToken:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    SessionOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        sessionToken:
          $ref: "#/components/schemas/SortOrder"
        userId:
          $ref: "#/components/schemas/SortOrder"
        expires:
          $ref: "#/components/schemas/SortOrder"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    SessionWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SessionWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereInput"
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    SessionScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        sessionToken:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    UserWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        email:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
        image:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumRoleFilter"
            - $ref: "#/components/schemas/Role"
        accounts:
          $ref: "#/components/schemas/AccountListRelationFilter"
        sessions:
          $ref: "#/components/schemas/SessionListRelationFilter"
        listings:
          $ref: "#/components/schemas/ListingListRelationFilter"
    UserOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        email:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        image:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        role:
          $ref: "#/components/schemas/SortOrder"
        accounts:
          $ref: "#/components/schemas/AccountOrderByRelationAggregateInput"
        sessions:
          $ref: "#/components/schemas/SessionOrderByRelationAggregateInput"
        listings:
          $ref: "#/components/schemas/ListingOrderByRelationAggregateInput"
    UserWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
        image:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumRoleFilter"
            - $ref: "#/components/schemas/Role"
        accounts:
          $ref: "#/components/schemas/AccountListRelationFilter"
        sessions:
          $ref: "#/components/schemas/SessionListRelationFilter"
        listings:
          $ref: "#/components/schemas/ListingListRelationFilter"
    UserScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        email:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
        image:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumRoleWithAggregatesFilter"
            - $ref: "#/components/schemas/Role"
    VerificationTokenWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/VerificationTokenWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenWhereInput"
        identifier:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        token:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    VerificationTokenOrderByWithRelationInput:
      type: object
      properties:
        identifier:
          $ref: "#/components/schemas/SortOrder"
        token:
          $ref: "#/components/schemas/SortOrder"
        expires:
          $ref: "#/components/schemas/SortOrder"
    VerificationTokenWhereUniqueInput:
      type: object
      properties:
        token:
          type: string
        identifier_token:
          $ref: "#/components/schemas/VerificationTokenIdentifierTokenCompoundUniqueInput"
        AND:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/VerificationTokenWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenWhereInput"
        identifier:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    VerificationTokenScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
        identifier:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        token:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    ListingWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ListingWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ListingWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ListingWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        title:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        price:
          oneOf:
            - $ref: "#/components/schemas/FloatFilter"
            - type: number
        bathrooms:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        bedrooms:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        matterPortId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        state:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        city:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    ListingOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        title:
          $ref: "#/components/schemas/SortOrder"
        description:
          $ref: "#/components/schemas/SortOrder"
        price:
          $ref: "#/components/schemas/SortOrder"
        bathrooms:
          $ref: "#/components/schemas/SortOrder"
        bedrooms:
          $ref: "#/components/schemas/SortOrder"
        userId:
          $ref: "#/components/schemas/SortOrder"
        matterPortId:
          $ref: "#/components/schemas/SortOrder"
        state:
          $ref: "#/components/schemas/SortOrder"
        city:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    ListingWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/ListingWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ListingWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ListingWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingWhereInput"
        title:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        price:
          oneOf:
            - $ref: "#/components/schemas/FloatFilter"
            - type: number
        bathrooms:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        bedrooms:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        matterPortId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        state:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        city:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    ListingScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ListingScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ListingScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ListingScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        title:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        price:
          oneOf:
            - $ref: "#/components/schemas/FloatWithAggregatesFilter"
            - type: number
        bathrooms:
          oneOf:
            - $ref: "#/components/schemas/IntWithAggregatesFilter"
            - type: integer
        bedrooms:
          oneOf:
            - $ref: "#/components/schemas/IntWithAggregatesFilter"
            - type: integer
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        matterPortId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        state:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        city:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    AccountCreateInput:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutAccountsInput"
      required:
        - type
        - provider
        - providerAccountId
        - user
    AccountUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutAccountsNestedInput"
    AccountCreateManyInput:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
      required:
        - userId
        - type
        - provider
        - providerAccountId
    AccountUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
    SessionCreateInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        expires:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutSessionsInput"
      required:
        - sessionToken
        - expires
        - user
    SessionUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutSessionsNestedInput"
    SessionCreateManyInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        userId:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - sessionToken
        - userId
        - expires
    SessionUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    UserCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        role:
          $ref: "#/components/schemas/Role"
        accounts:
          $ref: "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
        sessions:
          $ref: "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
        listings:
          $ref: "#/components/schemas/ListingCreateNestedManyWithoutUserInput"
    UserUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
        accounts:
          $ref: "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
        sessions:
          $ref: "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
        listings:
          $ref: "#/components/schemas/ListingUpdateManyWithoutUserNestedInput"
    UserCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        role:
          $ref: "#/components/schemas/Role"
    UserUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
    VerificationTokenCreateInput:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - identifier
        - token
        - expires
    VerificationTokenUpdateInput:
      type: object
      properties:
        identifier:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    VerificationTokenCreateManyInput:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - identifier
        - token
        - expires
    VerificationTokenUpdateManyMutationInput:
      type: object
      properties:
        identifier:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    ListingCreateInput:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: number
        bathrooms:
          type: integer
        bedrooms:
          type: integer
        matterPortId:
          type: string
        state:
          type: string
        city:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutListingsInput"
      required:
        - title
        - description
        - price
        - bathrooms
        - bedrooms
        - matterPortId
        - state
        - city
        - user
    ListingUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        price:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/FloatFieldUpdateOperationsInput"
        bathrooms:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        bedrooms:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        matterPortId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        city:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutListingsNestedInput"
    ListingCreateManyInput:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: number
        bathrooms:
          type: integer
        bedrooms:
          type: integer
        userId:
          type: string
        matterPortId:
          type: string
        state:
          type: string
        city:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - title
        - description
        - price
        - bathrooms
        - bedrooms
        - userId
        - matterPortId
        - state
        - city
    ListingUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        price:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/FloatFieldUpdateOperationsInput"
        bathrooms:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        bedrooms:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        matterPortId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        city:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    StringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    StringNullableFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
    IntNullableFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableFilter"
    UserRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/UserWhereInput"
        isNot:
          $ref: "#/components/schemas/UserWhereInput"
    SortOrderInput:
      type: object
      properties:
        sort:
          $ref: "#/components/schemas/SortOrder"
        nulls:
          $ref: "#/components/schemas/NullsOrder"
      required:
        - sort
    AccountProviderProviderAccountIdCompoundUniqueInput:
      type: object
      properties:
        provider:
          type: string
        providerAccountId:
          type: string
      required:
        - provider
        - providerAccountId
    StringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    StringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    IntNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatNullableFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedIntNullableFilter"
    DateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    DateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    DateTimeNullableFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    EnumRoleFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/Role"
        in:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        not:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/NestedEnumRoleFilter"
    AccountListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/AccountWhereInput"
        some:
          $ref: "#/components/schemas/AccountWhereInput"
        none:
          $ref: "#/components/schemas/AccountWhereInput"
    SessionListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/SessionWhereInput"
        some:
          $ref: "#/components/schemas/SessionWhereInput"
        none:
          $ref: "#/components/schemas/SessionWhereInput"
    ListingListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/ListingWhereInput"
        some:
          $ref: "#/components/schemas/ListingWhereInput"
        none:
          $ref: "#/components/schemas/ListingWhereInput"
    AccountOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    SessionOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    ListingOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    DateTimeNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    EnumRoleWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/Role"
        in:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        not:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/NestedEnumRoleWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumRoleFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumRoleFilter"
    VerificationTokenIdentifierTokenCompoundUniqueInput:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
      required:
        - identifier
        - token
    FloatFilter:
      type: object
      properties:
        equals:
          type: number
        in:
          type: array
          items:
            type: number
        notIn:
          type: array
          items:
            type: number
        lt:
          type: number
        lte:
          type: number
        gt:
          type: number
        gte:
          type: number
        not:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/NestedFloatFilter"
    IntFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntFilter"
    FloatWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: number
        in:
          type: array
          items:
            type: number
        notIn:
          type: array
          items:
            type: number
        lt:
          type: number
        lte:
          type: number
        gt:
          type: number
        gte:
          type: number
        not:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/NestedFloatWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatFilter"
        _sum:
          $ref: "#/components/schemas/NestedFloatFilter"
        _min:
          $ref: "#/components/schemas/NestedFloatFilter"
        _max:
          $ref: "#/components/schemas/NestedFloatFilter"
    IntWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedIntFilter"
        _max:
          $ref: "#/components/schemas/NestedIntFilter"
    UserCreateNestedOneWithoutAccountsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutAccountsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    StringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
    NullableStringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
    NullableIntFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: integer
        increment:
          type: integer
        decrement:
          type: integer
        multiply:
          type: integer
        divide:
          type: integer
    UserUpdateOneRequiredWithoutAccountsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutAccountsInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutAccountsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUpdateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutAccountsInput"
    UserCreateNestedOneWithoutSessionsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutSessionsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    DateTimeFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
          format: date-time
    UserUpdateOneRequiredWithoutSessionsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutSessionsInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutSessionsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUpdateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSessionsInput"
    AccountCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/AccountCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
    SessionCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SessionCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
    ListingCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ListingCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingCreateWithoutUserInput"
            - $ref: "#/components/schemas/ListingUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ListingCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/ListingCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ListingWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingWhereUniqueInput"
    AccountUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/AccountCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
    SessionUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SessionCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
    ListingUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ListingCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingCreateWithoutUserInput"
            - $ref: "#/components/schemas/ListingUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ListingCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/ListingCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ListingWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingWhereUniqueInput"
    NullableDateTimeFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
          format: date-time
    EnumRoleFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          $ref: "#/components/schemas/Role"
    AccountUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/AccountCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereInput"
    SessionUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SessionCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereInput"
    ListingUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ListingCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingCreateWithoutUserInput"
            - $ref: "#/components/schemas/ListingUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ListingCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ListingUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/ListingCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ListingWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ListingWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ListingWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ListingWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ListingUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ListingUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ListingScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingScalarWhereInput"
    AccountUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/AccountCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereInput"
    SessionUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SessionCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereInput"
    ListingUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ListingCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingCreateWithoutUserInput"
            - $ref: "#/components/schemas/ListingUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ListingCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ListingUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/ListingCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ListingWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ListingWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ListingWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ListingWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ListingUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ListingUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ListingScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingScalarWhereInput"
    UserCreateNestedOneWithoutListingsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutListingsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutListingsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutListingsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    FloatFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: number
        increment:
          type: number
        decrement:
          type: number
        multiply:
          type: number
        divide:
          type: number
    IntFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: integer
        increment:
          type: integer
        decrement:
          type: integer
        multiply:
          type: integer
        divide:
          type: integer
    UserUpdateOneRequiredWithoutListingsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutListingsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutListingsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutListingsInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutListingsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutListingsInput"
            - $ref: "#/components/schemas/UserUpdateWithoutListingsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutListingsInput"
    NestedStringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    NestedStringNullableFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
    NestedIntNullableFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableFilter"
    NestedStringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    NestedIntFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntFilter"
    NestedStringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    NestedIntNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatNullableFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedIntNullableFilter"
    NestedFloatNullableFilter:
      type: object
      properties:
        equals:
          type: number
        in:
          type: array
          items:
            type: number
        notIn:
          type: array
          items:
            type: number
        lt:
          type: number
        lte:
          type: number
        gt:
          type: number
        gte:
          type: number
        not:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/NestedFloatNullableFilter"
    NestedDateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedDateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedDateTimeNullableFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    NestedEnumRoleFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/Role"
        in:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        not:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/NestedEnumRoleFilter"
    NestedDateTimeNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    NestedEnumRoleWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/Role"
        in:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        not:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/NestedEnumRoleWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumRoleFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumRoleFilter"
    NestedFloatFilter:
      type: object
      properties:
        equals:
          type: number
        in:
          type: array
          items:
            type: number
        notIn:
          type: array
          items:
            type: number
        lt:
          type: number
        lte:
          type: number
        gt:
          type: number
        gte:
          type: number
        not:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/NestedFloatFilter"
    NestedFloatWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: number
        in:
          type: array
          items:
            type: number
        notIn:
          type: array
          items:
            type: number
        lt:
          type: number
        lte:
          type: number
        gt:
          type: number
        gte:
          type: number
        not:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/NestedFloatWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatFilter"
        _sum:
          $ref: "#/components/schemas/NestedFloatFilter"
        _min:
          $ref: "#/components/schemas/NestedFloatFilter"
        _max:
          $ref: "#/components/schemas/NestedFloatFilter"
    NestedIntWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedIntFilter"
        _max:
          $ref: "#/components/schemas/NestedIntFilter"
    UserCreateWithoutAccountsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        role:
          $ref: "#/components/schemas/Role"
        sessions:
          $ref: "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
        listings:
          $ref: "#/components/schemas/ListingCreateNestedManyWithoutUserInput"
    UserUncheckedCreateWithoutAccountsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        role:
          $ref: "#/components/schemas/Role"
        sessions:
          $ref: "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
        listings:
          $ref: "#/components/schemas/ListingUncheckedCreateNestedManyWithoutUserInput"
    UserCreateOrConnectWithoutAccountsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
      required:
        - where
        - create
    UserUpsertWithoutAccountsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutAccountsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutAccountsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutAccountsInput"
      required:
        - data
    UserUpdateWithoutAccountsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
        sessions:
          $ref: "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
        listings:
          $ref: "#/components/schemas/ListingUpdateManyWithoutUserNestedInput"
    UserUncheckedUpdateWithoutAccountsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
        sessions:
          $ref: "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
        listings:
          $ref: "#/components/schemas/ListingUncheckedUpdateManyWithoutUserNestedInput"
    UserCreateWithoutSessionsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        role:
          $ref: "#/components/schemas/Role"
        accounts:
          $ref: "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
        listings:
          $ref: "#/components/schemas/ListingCreateNestedManyWithoutUserInput"
    UserUncheckedCreateWithoutSessionsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        role:
          $ref: "#/components/schemas/Role"
        accounts:
          $ref: "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
        listings:
          $ref: "#/components/schemas/ListingUncheckedCreateNestedManyWithoutUserInput"
    UserCreateOrConnectWithoutSessionsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
      required:
        - where
        - create
    UserUpsertWithoutSessionsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSessionsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutSessionsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSessionsInput"
      required:
        - data
    UserUpdateWithoutSessionsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
        accounts:
          $ref: "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
        listings:
          $ref: "#/components/schemas/ListingUpdateManyWithoutUserNestedInput"
    UserUncheckedUpdateWithoutSessionsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
        accounts:
          $ref: "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
        listings:
          $ref: "#/components/schemas/ListingUncheckedUpdateManyWithoutUserNestedInput"
    AccountCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
      required:
        - type
        - provider
        - providerAccountId
    AccountUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
      required:
        - type
        - provider
        - providerAccountId
    AccountCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    AccountCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    SessionCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - sessionToken
        - expires
    SessionUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - sessionToken
        - expires
    SessionCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    SessionCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    ListingCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: number
        bathrooms:
          type: integer
        bedrooms:
          type: integer
        matterPortId:
          type: string
        state:
          type: string
        city:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - title
        - description
        - price
        - bathrooms
        - bedrooms
        - matterPortId
        - state
        - city
    ListingUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: number
        bathrooms:
          type: integer
        bedrooms:
          type: integer
        matterPortId:
          type: string
        state:
          type: string
        city:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - title
        - description
        - price
        - bathrooms
        - bedrooms
        - matterPortId
        - state
        - city
    ListingCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListingWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ListingCreateWithoutUserInput"
            - $ref: "#/components/schemas/ListingUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    ListingCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/ListingCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    AccountUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    AccountUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    AccountUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateManyMutationInput"
            - $ref: "#/components/schemas/AccountUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    AccountScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AccountScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        providerAccountId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        access_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        token_type:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        scope:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        id_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        session_state:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
    SessionUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    SessionUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    SessionUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateManyMutationInput"
            - $ref: "#/components/schemas/SessionUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    SessionScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SessionScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        sessionToken:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    ListingUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListingWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ListingUpdateWithoutUserInput"
            - $ref: "#/components/schemas/ListingUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ListingCreateWithoutUserInput"
            - $ref: "#/components/schemas/ListingUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    ListingUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListingWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ListingUpdateWithoutUserInput"
            - $ref: "#/components/schemas/ListingUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    ListingUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListingScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ListingUpdateManyMutationInput"
            - $ref: "#/components/schemas/ListingUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    ListingScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ListingScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ListingScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ListingScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListingScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        title:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        price:
          oneOf:
            - $ref: "#/components/schemas/FloatFilter"
            - type: number
        bathrooms:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        bedrooms:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        matterPortId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        state:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        city:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    UserCreateWithoutListingsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        role:
          $ref: "#/components/schemas/Role"
        accounts:
          $ref: "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
        sessions:
          $ref: "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
    UserUncheckedCreateWithoutListingsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        role:
          $ref: "#/components/schemas/Role"
        accounts:
          $ref: "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
        sessions:
          $ref: "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
    UserCreateOrConnectWithoutListingsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutListingsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutListingsInput"
      required:
        - where
        - create
    UserUpsertWithoutListingsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutListingsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutListingsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutListingsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutListingsInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutListingsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutListingsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutListingsInput"
      required:
        - data
    UserUpdateWithoutListingsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
        accounts:
          $ref: "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
        sessions:
          $ref: "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
    UserUncheckedUpdateWithoutListingsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
        accounts:
          $ref: "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
        sessions:
          $ref: "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
    AccountCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
      required:
        - type
        - provider
        - providerAccountId
    SessionCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - sessionToken
        - expires
    ListingCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: number
        bathrooms:
          type: integer
        bedrooms:
          type: integer
        matterPortId:
          type: string
        state:
          type: string
        city:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - title
        - description
        - price
        - bathrooms
        - bedrooms
        - matterPortId
        - state
        - city
    AccountUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
    AccountUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
    AccountUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
    SessionUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    SessionUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    SessionUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    ListingUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        price:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/FloatFieldUpdateOperationsInput"
        bathrooms:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        bedrooms:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        matterPortId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        city:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    ListingUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        price:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/FloatFieldUpdateOperationsInput"
        bathrooms:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        bedrooms:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        matterPortId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        city:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    ListingUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        price:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/FloatFieldUpdateOperationsInput"
        bathrooms:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        bedrooms:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        matterPortId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        city:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    UserArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
    AccountInclude:
      type: object
      properties:
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    SessionInclude:
      type: object
      properties:
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    UserInclude:
      type: object
      properties:
        accounts:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AccountFindManyArgs"
        sessions:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SessionFindManyArgs"
        listings:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ListingFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountOutputTypeArgs"
    ListingInclude:
      type: object
      properties:
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    UserCountOutputTypeSelect:
      type: object
      properties:
        accounts:
          type: boolean
        sessions:
          type: boolean
        listings:
          type: boolean
    UserCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserCountOutputTypeSelect"
    AccountSelect:
      type: object
      properties:
        id:
          type: boolean
        userId:
          type: boolean
        type:
          type: boolean
        provider:
          type: boolean
        providerAccountId:
          type: boolean
        refresh_token:
          type: boolean
        access_token:
          type: boolean
        expires_at:
          type: boolean
        token_type:
          type: boolean
        scope:
          type: boolean
        id_token:
          type: boolean
        session_state:
          type: boolean
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    SessionSelect:
      type: object
      properties:
        id:
          type: boolean
        sessionToken:
          type: boolean
        userId:
          type: boolean
        expires:
          type: boolean
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    UserSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        emailVerified:
          type: boolean
        image:
          type: boolean
        role:
          type: boolean
        accounts:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AccountFindManyArgs"
        sessions:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SessionFindManyArgs"
        listings:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ListingFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountOutputTypeArgs"
    VerificationTokenSelect:
      type: object
      properties:
        identifier:
          type: boolean
        token:
          type: boolean
        expires:
          type: boolean
    ListingSelect:
      type: object
      properties:
        id:
          type: boolean
        title:
          type: boolean
        description:
          type: boolean
        price:
          type: boolean
        bathrooms:
          type: boolean
        bedrooms:
          type: boolean
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        userId:
          type: boolean
        matterPortId:
          type: boolean
        state:
          type: boolean
        city:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    AccountCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        userId:
          type: boolean
        type:
          type: boolean
        provider:
          type: boolean
        providerAccountId:
          type: boolean
        refresh_token:
          type: boolean
        access_token:
          type: boolean
        expires_at:
          type: boolean
        token_type:
          type: boolean
        scope:
          type: boolean
        id_token:
          type: boolean
        session_state:
          type: boolean
        _all:
          type: boolean
    AccountAvgAggregateInput:
      type: object
      properties:
        expires_at:
          type: boolean
    AccountSumAggregateInput:
      type: object
      properties:
        expires_at:
          type: boolean
    AccountMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        userId:
          type: boolean
        type:
          type: boolean
        provider:
          type: boolean
        providerAccountId:
          type: boolean
        refresh_token:
          type: boolean
        access_token:
          type: boolean
        expires_at:
          type: boolean
        token_type:
          type: boolean
        scope:
          type: boolean
        id_token:
          type: boolean
        session_state:
          type: boolean
    AccountMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        userId:
          type: boolean
        type:
          type: boolean
        provider:
          type: boolean
        providerAccountId:
          type: boolean
        refresh_token:
          type: boolean
        access_token:
          type: boolean
        expires_at:
          type: boolean
        token_type:
          type: boolean
        scope:
          type: boolean
        id_token:
          type: boolean
        session_state:
          type: boolean
    SessionCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        sessionToken:
          type: boolean
        userId:
          type: boolean
        expires:
          type: boolean
        _all:
          type: boolean
    SessionMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        sessionToken:
          type: boolean
        userId:
          type: boolean
        expires:
          type: boolean
    SessionMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        sessionToken:
          type: boolean
        userId:
          type: boolean
        expires:
          type: boolean
    UserCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        emailVerified:
          type: boolean
        image:
          type: boolean
        role:
          type: boolean
        _all:
          type: boolean
    UserMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        emailVerified:
          type: boolean
        image:
          type: boolean
        role:
          type: boolean
    UserMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        emailVerified:
          type: boolean
        image:
          type: boolean
        role:
          type: boolean
    VerificationTokenCountAggregateInput:
      type: object
      properties:
        identifier:
          type: boolean
        token:
          type: boolean
        expires:
          type: boolean
        _all:
          type: boolean
    VerificationTokenMinAggregateInput:
      type: object
      properties:
        identifier:
          type: boolean
        token:
          type: boolean
        expires:
          type: boolean
    VerificationTokenMaxAggregateInput:
      type: object
      properties:
        identifier:
          type: boolean
        token:
          type: boolean
        expires:
          type: boolean
    ListingCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        title:
          type: boolean
        description:
          type: boolean
        price:
          type: boolean
        bathrooms:
          type: boolean
        bedrooms:
          type: boolean
        userId:
          type: boolean
        matterPortId:
          type: boolean
        state:
          type: boolean
        city:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        _all:
          type: boolean
    ListingAvgAggregateInput:
      type: object
      properties:
        price:
          type: boolean
        bathrooms:
          type: boolean
        bedrooms:
          type: boolean
    ListingSumAggregateInput:
      type: object
      properties:
        price:
          type: boolean
        bathrooms:
          type: boolean
        bedrooms:
          type: boolean
    ListingMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        title:
          type: boolean
        description:
          type: boolean
        price:
          type: boolean
        bathrooms:
          type: boolean
        bedrooms:
          type: boolean
        userId:
          type: boolean
        matterPortId:
          type: boolean
        state:
          type: boolean
        city:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    ListingMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        title:
          type: boolean
        description:
          type: boolean
        price:
          type: boolean
        bathrooms:
          type: boolean
        bedrooms:
          type: boolean
        userId:
          type: boolean
        matterPortId:
          type: boolean
        state:
          type: boolean
        city:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    AggregateAccount:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/AccountCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/AccountAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/AccountSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/AccountMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/AccountMaxAggregateOutputType"
    AccountGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
        _count:
          $ref: "#/components/schemas/AccountCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/AccountAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/AccountSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/AccountMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/AccountMaxAggregateOutputType"
      required:
        - id
        - userId
        - type
        - provider
        - providerAccountId
    AggregateSession:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SessionCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/SessionMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/SessionMaxAggregateOutputType"
    SessionGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        userId:
          type: string
        expires:
          type: string
          format: date-time
        _count:
          $ref: "#/components/schemas/SessionCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/SessionMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/SessionMaxAggregateOutputType"
      required:
        - id
        - sessionToken
        - userId
        - expires
    AggregateUser:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateOutputType"
    UserGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        role:
          $ref: "#/components/schemas/Role"
        _count:
          $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateOutputType"
      required:
        - id
        - role
    AggregateVerificationToken:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/VerificationTokenCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/VerificationTokenMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/VerificationTokenMaxAggregateOutputType"
    VerificationTokenGroupByOutputType:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
        _count:
          $ref: "#/components/schemas/VerificationTokenCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/VerificationTokenMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/VerificationTokenMaxAggregateOutputType"
      required:
        - identifier
        - token
        - expires
    AggregateListing:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/ListingCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/ListingAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/ListingSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/ListingMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/ListingMaxAggregateOutputType"
    ListingGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: number
        bathrooms:
          type: integer
        bedrooms:
          type: integer
        userId:
          type: string
        matterPortId:
          type: string
        state:
          type: string
        city:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        _count:
          $ref: "#/components/schemas/ListingCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/ListingAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/ListingSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/ListingMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/ListingMaxAggregateOutputType"
      required:
        - id
        - title
        - description
        - price
        - bathrooms
        - bedrooms
        - userId
        - matterPortId
        - state
        - city
        - createdAt
        - updatedAt
    AccountCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        type:
          type: integer
        provider:
          type: integer
        providerAccountId:
          type: integer
        refresh_token:
          type: integer
        access_token:
          type: integer
        expires_at:
          type: integer
        token_type:
          type: integer
        scope:
          type: integer
        id_token:
          type: integer
        session_state:
          type: integer
        _all:
          type: integer
      required:
        - id
        - userId
        - type
        - provider
        - providerAccountId
        - refresh_token
        - access_token
        - expires_at
        - token_type
        - scope
        - id_token
        - session_state
        - _all
    AccountAvgAggregateOutputType:
      type: object
      properties:
        expires_at:
          type: number
    AccountSumAggregateOutputType:
      type: object
      properties:
        expires_at:
          type: integer
    AccountMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
    AccountMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
    SessionCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        sessionToken:
          type: integer
        userId:
          type: integer
        expires:
          type: integer
        _all:
          type: integer
      required:
        - id
        - sessionToken
        - userId
        - expires
        - _all
    SessionMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        userId:
          type: string
        expires:
          type: string
          format: date-time
    SessionMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        userId:
          type: string
        expires:
          type: string
          format: date-time
    UserCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        email:
          type: integer
        emailVerified:
          type: integer
        image:
          type: integer
        role:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - email
        - emailVerified
        - image
        - role
        - _all
    UserMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        role:
          $ref: "#/components/schemas/Role"
    UserMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        role:
          $ref: "#/components/schemas/Role"
    VerificationTokenCountAggregateOutputType:
      type: object
      properties:
        identifier:
          type: integer
        token:
          type: integer
        expires:
          type: integer
        _all:
          type: integer
      required:
        - identifier
        - token
        - expires
        - _all
    VerificationTokenMinAggregateOutputType:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
    VerificationTokenMaxAggregateOutputType:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
    ListingCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        title:
          type: integer
        description:
          type: integer
        price:
          type: integer
        bathrooms:
          type: integer
        bedrooms:
          type: integer
        userId:
          type: integer
        matterPortId:
          type: integer
        state:
          type: integer
        city:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        _all:
          type: integer
      required:
        - id
        - title
        - description
        - price
        - bathrooms
        - bedrooms
        - userId
        - matterPortId
        - state
        - city
        - createdAt
        - updatedAt
        - _all
    ListingAvgAggregateOutputType:
      type: object
      properties:
        price:
          type: number
        bathrooms:
          type: number
        bedrooms:
          type: number
    ListingSumAggregateOutputType:
      type: object
      properties:
        price:
          type: number
        bathrooms:
          type: integer
        bedrooms:
          type: integer
    ListingMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: number
        bathrooms:
          type: integer
        bedrooms:
          type: integer
        userId:
          type: string
        matterPortId:
          type: string
        state:
          type: string
        city:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ListingMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: number
        bathrooms:
          type: integer
        bedrooms:
          type: integer
        userId:
          type: string
        matterPortId:
          type: string
        state:
          type: string
        city:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    _Meta:
      type: object
      properties:
        meta:
          type: object
          description: Meta information about the request or response
          properties:
            serialization:
              description: Serialization metadata
          additionalProperties: true
    _Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - message
          properties:
            prisma:
              type: boolean
              description: Indicates if the error occurred during a Prisma call
            rejectedByPolicy:
              type: boolean
              description: Indicates if the error was due to rejection by a policy
            code:
              type: string
              description: Prisma error code. Only available when "prisma" field is true.
            message:
              type: string
              description: Error message
            reason:
              type: string
              description: Detailed error reason
          additionalProperties: true
    BatchPayload:
      type: object
      properties:
        count:
          type: integer
    AccountCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        data:
          $ref: "#/components/schemas/AccountCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/AccountCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        data:
          $ref: "#/components/schemas/AccountUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        data:
          $ref: "#/components/schemas/AccountUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        create:
          $ref: "#/components/schemas/AccountCreateInput"
        update:
          $ref: "#/components/schemas/AccountUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        orderBy:
          $ref: "#/components/schemas/AccountOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AccountCountAggregateInput"
        _min:
          $ref: "#/components/schemas/AccountMinAggregateInput"
        _max:
          $ref: "#/components/schemas/AccountMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/AccountSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/AccountAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        orderBy:
          $ref: "#/components/schemas/AccountOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/AccountScalarFieldEnum"
        having:
          $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AccountCountAggregateInput"
        _min:
          $ref: "#/components/schemas/AccountMinAggregateInput"
        _max:
          $ref: "#/components/schemas/AccountMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/AccountSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/AccountAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        data:
          $ref: "#/components/schemas/SessionCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/SessionCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        data:
          $ref: "#/components/schemas/SessionUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        data:
          $ref: "#/components/schemas/SessionUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        create:
          $ref: "#/components/schemas/SessionCreateInput"
        update:
          $ref: "#/components/schemas/SessionUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        orderBy:
          $ref: "#/components/schemas/SessionOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SessionCountAggregateInput"
        _min:
          $ref: "#/components/schemas/SessionMinAggregateInput"
        _max:
          $ref: "#/components/schemas/SessionMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        orderBy:
          $ref: "#/components/schemas/SessionOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/SessionScalarFieldEnum"
        having:
          $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SessionCountAggregateInput"
        _min:
          $ref: "#/components/schemas/SessionMinAggregateInput"
        _max:
          $ref: "#/components/schemas/SessionMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        data:
          $ref: "#/components/schemas/UserCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/UserCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        data:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          $ref: "#/components/schemas/UserUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          $ref: "#/components/schemas/UserCreateInput"
        update:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/UserScalarFieldEnum"
        having:
          $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        data:
          $ref: "#/components/schemas/VerificationTokenCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/VerificationTokenCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        data:
          $ref: "#/components/schemas/VerificationTokenUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        data:
          $ref: "#/components/schemas/VerificationTokenUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        create:
          $ref: "#/components/schemas/VerificationTokenCreateInput"
        update:
          $ref: "#/components/schemas/VerificationTokenUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        orderBy:
          $ref: "#/components/schemas/VerificationTokenOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/VerificationTokenCountAggregateInput"
        _min:
          $ref: "#/components/schemas/VerificationTokenMinAggregateInput"
        _max:
          $ref: "#/components/schemas/VerificationTokenMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        orderBy:
          $ref: "#/components/schemas/VerificationTokenOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/VerificationTokenScalarFieldEnum"
        having:
          $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/VerificationTokenCountAggregateInput"
        _min:
          $ref: "#/components/schemas/VerificationTokenMinAggregateInput"
        _max:
          $ref: "#/components/schemas/VerificationTokenMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListingCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/ListingSelect"
        include:
          $ref: "#/components/schemas/ListingInclude"
        data:
          $ref: "#/components/schemas/ListingCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListingCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/ListingCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListingFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ListingSelect"
        include:
          $ref: "#/components/schemas/ListingInclude"
        where:
          $ref: "#/components/schemas/ListingWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListingFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ListingSelect"
        include:
          $ref: "#/components/schemas/ListingInclude"
        where:
          $ref: "#/components/schemas/ListingWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListingFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ListingSelect"
        include:
          $ref: "#/components/schemas/ListingInclude"
        where:
          $ref: "#/components/schemas/ListingWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListingUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/ListingSelect"
        include:
          $ref: "#/components/schemas/ListingInclude"
        where:
          $ref: "#/components/schemas/ListingWhereUniqueInput"
        data:
          $ref: "#/components/schemas/ListingUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListingUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/ListingWhereInput"
        data:
          $ref: "#/components/schemas/ListingUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListingUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/ListingSelect"
        include:
          $ref: "#/components/schemas/ListingInclude"
        where:
          $ref: "#/components/schemas/ListingWhereUniqueInput"
        create:
          $ref: "#/components/schemas/ListingCreateInput"
        update:
          $ref: "#/components/schemas/ListingUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListingDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ListingSelect"
        include:
          $ref: "#/components/schemas/ListingInclude"
        where:
          $ref: "#/components/schemas/ListingWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListingDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListingWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListingCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ListingSelect"
        where:
          $ref: "#/components/schemas/ListingWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListingAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListingWhereInput"
        orderBy:
          $ref: "#/components/schemas/ListingOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/ListingWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ListingCountAggregateInput"
        _min:
          $ref: "#/components/schemas/ListingMinAggregateInput"
        _max:
          $ref: "#/components/schemas/ListingMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/ListingSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/ListingAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListingGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListingWhereInput"
        orderBy:
          $ref: "#/components/schemas/ListingOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/ListingScalarFieldEnum"
        having:
          $ref: "#/components/schemas/ListingScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ListingCountAggregateInput"
        _min:
          $ref: "#/components/schemas/ListingMinAggregateInput"
        _max:
          $ref: "#/components/schemas/ListingMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/ListingSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/ListingAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
paths:
  /api/account/create:
    post:
      operationId: createAccount
      description: Create a new Account
      tags:
        - account
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountCreateArgs"
  /api/account/createMany:
    post:
      operationId: createManyAccount
      description: Create several Account
      tags:
        - account
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountCreateManyArgs"
  /api/account/findUnique:
    get:
      operationId: findUniqueAccount
      description: Find one unique Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/account/findFirst:
    get:
      operationId: findFirstAccount
      description: Find the first Account matching the given condition
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/account/findMany:
    get:
      operationId: findManyAccount
      description: Find a list of Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/account/update:
    patch:
      operationId: updateAccount
      description: Update a Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountUpdateArgs"
  /api/account/updateMany:
    patch:
      operationId: updateManyAccount
      description: Update Accounts matching the given condition
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountUpdateManyArgs"
  /api/account/upsert:
    post:
      operationId: upsertAccount
      description: Upsert a Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountUpsertArgs"
  /api/account/delete:
    delete:
      operationId: deleteAccount
      description: Delete one unique Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/account/deleteMany:
    delete:
      operationId: deleteManyAccount
      description: Delete Accounts matching the given condition
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/account/count:
    get:
      operationId: countAccount
      description: Find a list of Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/AccountCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/account/aggregate:
    get:
      operationId: aggregateAccount
      description: Aggregate Accounts
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateAccount"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/account/groupBy:
    get:
      operationId: groupByAccount
      description: Group Accounts by fields
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/AccountGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/session/create:
    post:
      operationId: createSession
      description: Create a new Session
      tags:
        - session
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionCreateArgs"
  /api/session/createMany:
    post:
      operationId: createManySession
      description: Create several Session
      tags:
        - session
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionCreateManyArgs"
  /api/session/findUnique:
    get:
      operationId: findUniqueSession
      description: Find one unique Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/session/findFirst:
    get:
      operationId: findFirstSession
      description: Find the first Session matching the given condition
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/session/findMany:
    get:
      operationId: findManySession
      description: Find a list of Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/session/update:
    patch:
      operationId: updateSession
      description: Update a Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionUpdateArgs"
  /api/session/updateMany:
    patch:
      operationId: updateManySession
      description: Update Sessions matching the given condition
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionUpdateManyArgs"
  /api/session/upsert:
    post:
      operationId: upsertSession
      description: Upsert a Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionUpsertArgs"
  /api/session/delete:
    delete:
      operationId: deleteSession
      description: Delete one unique Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/session/deleteMany:
    delete:
      operationId: deleteManySession
      description: Delete Sessions matching the given condition
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/session/count:
    get:
      operationId: countSession
      description: Find a list of Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/SessionCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/session/aggregate:
    get:
      operationId: aggregateSession
      description: Aggregate Sessions
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateSession"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/session/groupBy:
    get:
      operationId: groupBySession
      description: Group Sessions by fields
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SessionGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/user/create:
    post:
      operationId: createUser
      description: Create a new User
      tags:
        - user
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateArgs"
  /api/user/createMany:
    post:
      operationId: createManyUser
      description: Create several User
      tags:
        - user
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateManyArgs"
  /api/user/findUnique:
    get:
      operationId: findUniqueUser
      description: Find one unique User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/user/findFirst:
    get:
      operationId: findFirstUser
      description: Find the first User matching the given condition
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/user/findMany:
    get:
      operationId: findManyUser
      description: Find a list of User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/user/update:
    patch:
      operationId: updateUser
      description: Update a User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateArgs"
  /api/user/updateMany:
    patch:
      operationId: updateManyUser
      description: Update Users matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateManyArgs"
  /api/user/upsert:
    post:
      operationId: upsertUser
      description: Upsert a User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpsertArgs"
  /api/user/delete:
    delete:
      operationId: deleteUser
      description: Delete one unique User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/user/deleteMany:
    delete:
      operationId: deleteManyUser
      description: Delete Users matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/user/count:
    get:
      operationId: countUser
      description: Find a list of User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/UserCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/user/aggregate:
    get:
      operationId: aggregateUser
      description: Aggregate Users
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateUser"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/user/groupBy:
    get:
      operationId: groupByUser
      description: Group Users by fields
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/verificationToken/create:
    post:
      operationId: createVerificationToken
      description: Create a new VerificationToken
      tags:
        - verificationToken
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenCreateArgs"
  /api/verificationToken/createMany:
    post:
      operationId: createManyVerificationToken
      description: Create several VerificationToken
      tags:
        - verificationToken
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenCreateManyArgs"
  /api/verificationToken/findUnique:
    get:
      operationId: findUniqueVerificationToken
      description: Find one unique VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/verificationToken/findFirst:
    get:
      operationId: findFirstVerificationToken
      description: Find the first VerificationToken matching the given condition
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/verificationToken/findMany:
    get:
      operationId: findManyVerificationToken
      description: Find a list of VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/verificationToken/update:
    patch:
      operationId: updateVerificationToken
      description: Update a VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenUpdateArgs"
  /api/verificationToken/updateMany:
    patch:
      operationId: updateManyVerificationToken
      description: Update VerificationTokens matching the given condition
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenUpdateManyArgs"
  /api/verificationToken/upsert:
    post:
      operationId: upsertVerificationToken
      description: Upsert a VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenUpsertArgs"
  /api/verificationToken/delete:
    delete:
      operationId: deleteVerificationToken
      description: Delete one unique VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/verificationToken/deleteMany:
    delete:
      operationId: deleteManyVerificationToken
      description: Delete VerificationTokens matching the given condition
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/verificationToken/count:
    get:
      operationId: countVerificationToken
      description: Find a list of VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/VerificationTokenCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/verificationToken/aggregate:
    get:
      operationId: aggregateVerificationToken
      description: Aggregate VerificationTokens
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateVerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/verificationToken/groupBy:
    get:
      operationId: groupByVerificationToken
      description: Group VerificationTokens by fields
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/VerificationTokenGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/listing/create:
    post:
      operationId: createListing
      description: Create a new Listing
      tags:
        - listing
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Listing"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListingCreateArgs"
  /api/listing/createMany:
    post:
      operationId: createManyListing
      description: Create several Listing
      tags:
        - listing
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListingCreateManyArgs"
  /api/listing/findUnique:
    get:
      operationId: findUniqueListing
      description: Find one unique Listing
      tags:
        - listing
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Listing"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListingFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/listing/findFirst:
    get:
      operationId: findFirstListing
      description: Find the first Listing matching the given condition
      tags:
        - listing
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Listing"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListingFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/listing/findMany:
    get:
      operationId: findManyListing
      description: Find a list of Listing
      tags:
        - listing
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Listing"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListingFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/listing/update:
    patch:
      operationId: updateListing
      description: Update a Listing
      tags:
        - listing
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Listing"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListingUpdateArgs"
  /api/listing/updateMany:
    patch:
      operationId: updateManyListing
      description: Update Listings matching the given condition
      tags:
        - listing
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListingUpdateManyArgs"
  /api/listing/upsert:
    post:
      operationId: upsertListing
      description: Upsert a Listing
      tags:
        - listing
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Listing"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListingUpsertArgs"
  /api/listing/delete:
    delete:
      operationId: deleteListing
      description: Delete one unique Listing
      tags:
        - listing
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Listing"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListingDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/listing/deleteMany:
    delete:
      operationId: deleteManyListing
      description: Delete Listings matching the given condition
      tags:
        - listing
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListingDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/listing/count:
    get:
      operationId: countListing
      description: Find a list of Listing
      tags:
        - listing
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/ListingCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListingCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/listing/aggregate:
    get:
      operationId: aggregateListing
      description: Aggregate Listings
      tags:
        - listing
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateListing"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListingAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/listing/groupBy:
    get:
      operationId: groupByListing
      description: Group Listings by fields
      tags:
        - listing
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ListingGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListingGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
